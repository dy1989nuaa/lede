#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  # release:
  #   types: [published]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          ln -s /mnt/openwrt/bin ./bin
          mkdir -p ./build_dir
          ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
          ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          ln -s /mnt/openwrt/dl ./dl
          ln -s /mnt/openwrt/feeds ./feeds
          ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h

      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          #
          # ========================固件定制部分========================
          # 

          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 

          # 以下为定制化固件选项和说明:
          #

          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #

          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          # 

          # 编译x64固件:
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_Generic=y
          CONFIG_LIBCURL_COOKIES=y
          CONFIG_LIBCURL_FILE=y
          CONFIG_LIBCURL_FTP=y
          CONFIG_LIBCURL_HTTP=y
          CONFIG_LIBCURL_NO_SMB="!"
          CONFIG_LIBCURL_OPENSSL=y
          CONFIG_LIBCURL_PROXY=y
          CONFIG_NGINX_HEADERS_MORE=y
          CONFIG_NGINX_HTTP_ACCESS=y
          CONFIG_NGINX_HTTP_AUTH_BASIC=y
          CONFIG_NGINX_HTTP_AUTOINDEX=y
          CONFIG_NGINX_HTTP_BROWSER=y
          CONFIG_NGINX_HTTP_CACHE=y
          CONFIG_NGINX_HTTP_CHARSET=y
          CONFIG_NGINX_HTTP_EMPTY_GIF=y
          CONFIG_NGINX_HTTP_FASTCGI=y
          CONFIG_NGINX_HTTP_GEO=y
          CONFIG_NGINX_HTTP_GZIP=y
          CONFIG_NGINX_HTTP_LIMIT_CONN=y
          CONFIG_NGINX_HTTP_LIMIT_REQ=y
          CONFIG_NGINX_HTTP_MAP=y
          CONFIG_NGINX_HTTP_MEMCACHED=y
          CONFIG_NGINX_HTTP_PROXY=y
          CONFIG_NGINX_HTTP_REFERER=y
          CONFIG_NGINX_HTTP_REWRITE=y
          CONFIG_NGINX_HTTP_SCGI=y
          CONFIG_NGINX_HTTP_SPLIT_CLIENTS=y
          CONFIG_NGINX_HTTP_SSI=y
          CONFIG_NGINX_HTTP_UPSTREAM_HASH=y
          CONFIG_NGINX_HTTP_UPSTREAM_IP_HASH=y
          CONFIG_NGINX_HTTP_UPSTREAM_KEEPALIVE=y
          CONFIG_NGINX_HTTP_UPSTREAM_LEAST_CONN=y
          CONFIG_NGINX_HTTP_USERID=y
          CONFIG_NGINX_HTTP_UWSGI=y
          CONFIG_NGINX_NAXSI=y
          CONFIG_NGINX_PCRE=y
          CONFIG_OPENVPN_openssl_ENABLE_DEF_AUTH=y
          CONFIG_OPENVPN_openssl_ENABLE_FRAGMENT=y
          CONFIG_OPENVPN_openssl_ENABLE_LZ4=y
          CONFIG_OPENVPN_openssl_ENABLE_LZO=y
          CONFIG_OPENVPN_openssl_ENABLE_MULTIHOME=y
          CONFIG_OPENVPN_openssl_ENABLE_PF=y
          CONFIG_OPENVPN_openssl_ENABLE_PORT_SHARE=y
          CONFIG_OPENVPN_openssl_ENABLE_SERVER=y
          CONFIG_OPENVPN_openssl_ENABLE_SMALL=y
          CONFIG_PACKAGE_6in4=y
          CONFIG_PACKAGE_ca-bundle=y
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_dnsmasq=y
          CONFIG_PACKAGE_dnsmasq-dhcpv6=y
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_frpc=y
          CONFIG_PACKAGE_ip6tables=y
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_kcptun-client=y
          CONFIG_PACKAGE_kmod-ipt-nat6=y
          CONFIG_PACKAGE_kmod-nf-nat6=y
          CONFIG_PACKAGE_kmod-sit=y
          CONFIG_PACKAGE_kmod-udptunnel4=y
          CONFIG_PACKAGE_kmod-udptunnel6=y
          CONFIG_PACKAGE_kmod-wireguard=y
          CONFIG_PACKAGE_libcurl=y
          CONFIG_PACKAGE_libfreetype=y
          CONFIG_PACKAGE_libiconv-full=y
          CONFIG_PACKAGE_libjpeg=y
          CONFIG_PACKAGE_liblzo=y
          CONFIG_PACKAGE_libpng=y
          CONFIG_PACKAGE_libpopt=y
          CONFIG_PACKAGE_luci-app-frpc=y
          CONFIG_PACKAGE_luci-app-kodexplorer=y
          CONFIG_PACKAGE_luci-app-mwan3=y
          CONFIG_PACKAGE_luci-app-mwan3helper=y
          CONFIG_PACKAGE_luci-app-n2n_v2=y
          CONFIG_PACKAGE_luci-app-openvpn-server=y
          CONFIG_PACKAGE_luci-app-shadowsocks-libev=y
          CONFIG_PACKAGE_luci-app-simple-adblock=y
          CONFIG_PACKAGE_luci-app-softethervpn=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          CONFIG_PACKAGE_luci-app-udpxy=y
          CONFIG_PACKAGE_luci-app-uhttpd=y
          CONFIG_PACKAGE_luci-app-verysync=m
          CONFIG_PACKAGE_luci-app-webadmin=y
          CONFIG_PACKAGE_luci-app-wireguard=y
          CONFIG_PACKAGE_luci-i18n-kodexplorer-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-mwan3-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-mwan3helper-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-n2n_v2-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-openvpn-server-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-softethervpn-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-verysync-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-webadmin-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-wireguard-zh-cn=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_luci-proto-wireguard=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_mwan3=y
          CONFIG_PACKAGE_n2n_v2=y
          CONFIG_PACKAGE_nginx=y
          CONFIG_PACKAGE_odhcp6c=y
          CONFIG_PACKAGE_odhcp6c_ext_cer_id=0
          CONFIG_PACKAGE_odhcpd-ipv6only=y
          CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0
          CONFIG_PACKAGE_openvpn-easy-rsa=y
          CONFIG_PACKAGE_openvpn-openssl=y
          CONFIG_PACKAGE_php7=y
          CONFIG_PACKAGE_php7-fpm=y
          CONFIG_PACKAGE_php7-mod-curl=y
          CONFIG_PACKAGE_php7-mod-gd=y
          CONFIG_PACKAGE_php7-mod-iconv=y
          CONFIG_PACKAGE_php7-mod-json=y
          CONFIG_PACKAGE_php7-mod-mbstring=y
          CONFIG_PACKAGE_php7-mod-opcache=y
          CONFIG_PACKAGE_php7-mod-session=y
          CONFIG_PACKAGE_php7-mod-zip=y
          CONFIG_PACKAGE_rsync=y
          CONFIG_PACKAGE_simple-adblock=y
          CONFIG_PACKAGE_softethervpn5-bridge=y
          CONFIG_PACKAGE_softethervpn5-client=y
          CONFIG_PACKAGE_softethervpn5-libs=y
          CONFIG_PACKAGE_softethervpn5-server=y
          CONFIG_PACKAGE_sudo=y
          CONFIG_PACKAGE_udpxy=y
          CONFIG_PACKAGE_verysync=m
          CONFIG_PACKAGE_wireguard-tools=y
          CONFIG_PACKAGE_zoneinfo-asia=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_nano=y
          CONFIG_PACKAGE_screen=y
          CONFIG_PACKAGE_tree=y
          CONFIG_PACKAGE_vim-fuller=y
          CONFIG_PACKAGE_wget=y
          CONFIG_PHP7_LIBFREETYPE=y
          CONFIG_RSYNC_zlib=y
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_VHD_IMAGES=y
          # CONFIG_VMDK_IMAGES is not set
          EOF

          # 常用软件包:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_curl=y
          # CONFIG_PACKAGE_htop=y
          # CONFIG_PACKAGE_nano=y
          # CONFIG_PACKAGE_screen=y
          # CONFIG_PACKAGE_tree=y
          # CONFIG_PACKAGE_vim-fuller=y
          # CONFIG_PACKAGE_wget=y
          # EOF

          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          # cat >> .config <<EOF
          # # CONFIG_TARGET_IMAGES_PAD is not set
          # # CONFIG_VMDK_IMAGES is not set
          # CONFIG_VHD_IMAGES=y
          # EOF

          # 
          # ========================固件定制部分结束========================
          # 

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find ./dl/ -size -1024c -exec rm -f {} \;
          df -h

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: ./bin/targets/
